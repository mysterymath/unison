-- This file has been generated by specsgen. Do not modify by hand!

module Unison.Target.MOS.SpecsGen.Size (size) where
import Unison.Target.MOS.SpecsGen.MOSInstructionDecl
size i
  | i `elem`
      [ADCAbs, ADCAbsIdx, ADCImag8, ADCImm, ADCIndirIdx,
       ADJCALLSTACKDOWN, ADJCALLSTACKUP, ANDAbs, ANDAbsIdx, ANDImag8,
       ANDImm, ANDIndirIdx, ANNOTATION_LABEL, ARITH_FENCE, ASL, ASLAbs,
       ASLAbsIdx, AddrHistk, AddrLostk, BITAbs, BR, BRA, BUNDLE,
       CFI_INSTRUCTION, CLV, CMPAbs, CMPAbsIdx, CMPImag8, CMPImm,
       CMPIndirIdx, CMPTermAbs, CMPTermIdx, CMPTermImag8, CMPTermImm,
       CMPTermIndir, CMPTermZ, CMPTermZMB, COPY, COPY_TO_REGCLASS,
       DBG_INSTR_REF, DBG_LABEL, DBG_PHI, DBG_VALUE, DBG_VALUE_LIST, DE,
       DEC, DECAbs, DECAbsIdx, DECImag8, DecMB, DecPtr, EH_LABEL, EORAbs,
       EORAbsIdx, EORImag8, EORImm, EORIndirIdx, EXTRACT_SUBREG,
       FAULTING_OP, FENTRY_CALL, GBR, GC_LABEL, G_ABS, G_ADD,
       G_ADDRSPACE_CAST, G_AND, G_ANYEXT, G_ASHR, G_ASSERT_ALIGN,
       G_ASSERT_SEXT, G_ASSERT_ZEXT, G_ATOMICRMW_ADD, G_ATOMICRMW_AND,
       G_ATOMICRMW_FADD, G_ATOMICRMW_FMAX, G_ATOMICRMW_FMIN,
       G_ATOMICRMW_FSUB, G_ATOMICRMW_MAX, G_ATOMICRMW_MIN,
       G_ATOMICRMW_NAND, G_ATOMICRMW_OR, G_ATOMICRMW_SUB,
       G_ATOMICRMW_UDEC_WRAP, G_ATOMICRMW_UINC_WRAP, G_ATOMICRMW_UMAX,
       G_ATOMICRMW_UMIN, G_ATOMICRMW_XCHG, G_ATOMICRMW_XOR,
       G_ATOMIC_CMPXCHG, G_ATOMIC_CMPXCHG_WITH_SUCCESS, G_BITCAST,
       G_BITREVERSE, G_BLOCK_ADDR, G_BR, G_BRCOND, G_BRCOND_IMM,
       G_BRINDIRECT, G_BRJT, G_BSWAP, G_BUILD_VECTOR,
       G_BUILD_VECTOR_TRUNC, G_BZERO, G_CMPZ, G_CONCAT_VECTORS,
       G_CONSTANT, G_CONSTANT_POOL, G_CTLZ, G_CTLZ_ZERO_UNDEF, G_CTPOP,
       G_CTTZ, G_CTTZ_ZERO_UNDEF, G_DEC, G_DEC_TMP, G_DYN_STACKALLOC,
       G_EXTRACT, G_EXTRACT_VECTOR_ELT, G_FABS, G_FADD, G_FCANONICALIZE,
       G_FCEIL, G_FCMP, G_FCONSTANT, G_FCOPYSIGN, G_FCOS, G_FDIV, G_FENCE,
       G_FEXP, G_FEXP2, G_FFLOOR, G_FLOG, G_FLOG10, G_FLOG2, G_FMA,
       G_FMAD, G_FMAXIMUM, G_FMAXNUM, G_FMAXNUM_IEEE, G_FMINIMUM,
       G_FMINNUM, G_FMINNUM_IEEE, G_FMUL, G_FNEARBYINT, G_FNEG, G_FPEXT,
       G_FPOW, G_FPOWI, G_FPTOSI, G_FPTOUI, G_FPTRUNC, G_FRAME_INDEX,
       G_FREEZE, G_FREM, G_FRINT, G_FSHL, G_FSHR, G_FSIN, G_FSQRT, G_FSUB,
       G_GLOBAL_VALUE, G_ICMP, G_IMPLICIT_DEF, G_INC, G_INC_TMP,
       G_INDEXED_LOAD, G_INDEXED_SEXTLOAD, G_INDEXED_STORE,
       G_INDEXED_ZEXTLOAD, G_INSERT, G_INSERT_VECTOR_ELT, G_INTRINSIC,
       G_INTRINSIC_FPTRUNC_ROUND, G_INTRINSIC_LRINT, G_INTRINSIC_ROUND,
       G_INTRINSIC_ROUNDEVEN, G_INTRINSIC_TRUNC,
       G_INTRINSIC_W_SIDE_EFFECTS, G_INTTOPTR, G_INVOKE_REGION_START,
       G_IS_FPCLASS, G_JUMP_TABLE, G_LLROUND, G_LOAD, G_LOAD_ABS,
       G_LOAD_ABS_IDX, G_LOAD_INDIR_IDX, G_LROUND, G_LSHR, G_LSHRE,
       G_MEMCPY, G_MEMCPY_INLINE, G_MEMMOVE, G_MEMSET, G_MERGE_VALUES,
       G_MUL, G_OR, G_PHI, G_PTRMASK, G_PTRTOINT, G_PTR_ADD,
       G_READCYCLECOUNTER, G_READ_REGISTER, G_ROTL, G_ROTR, G_SADDE,
       G_SADDO, G_SADDSAT, G_SBC, G_SBFX, G_SDIV, G_SDIVFIX, G_SDIVFIXSAT,
       G_SDIVREM, G_SELECT, G_SEXT, G_SEXTLOAD, G_SEXT_INREG, G_SHL,
       G_SHLE, G_SHUFFLE_VECTOR, G_SITOFP, G_SMAX, G_SMIN, G_SMULFIX,
       G_SMULFIXSAT, G_SMULH, G_SMULO, G_SREM, G_SSHLSAT, G_SSUBE,
       G_SSUBO, G_SSUBSAT, G_STORE, G_STORE_ABS, G_STORE_ABS_IDX,
       G_STORE_INDIR_IDX, G_STRICT_FADD, G_STRICT_FDIV, G_STRICT_FMA,
       G_STRICT_FMUL, G_STRICT_FREM, G_STRICT_FSQRT, G_STRICT_FSUB, G_SUB,
       G_TRUNC, G_UADDE, G_UADDO, G_UADDSAT, G_UBFX, G_UDIV, G_UDIVFIX,
       G_UDIVFIXSAT, G_UDIVREM, G_UITOFP, G_UMAX, G_UMIN, G_UMULFIX,
       G_UMULFIXSAT, G_UMULH, G_UMULO, G_UNMERGE_VALUES, G_UREM,
       G_USHLSAT, G_USUBE, G_USUBO, G_USUBSAT, G_VAARG, G_VASTART,
       G_VECREDUCE_ADD, G_VECREDUCE_AND, G_VECREDUCE_FADD,
       G_VECREDUCE_FMAX, G_VECREDUCE_FMIN, G_VECREDUCE_FMUL,
       G_VECREDUCE_MUL, G_VECREDUCE_OR, G_VECREDUCE_SEQ_FADD,
       G_VECREDUCE_SEQ_FMUL, G_VECREDUCE_SMAX, G_VECREDUCE_SMIN,
       G_VECREDUCE_UMAX, G_VECREDUCE_UMIN, G_VECREDUCE_XOR,
       G_WRITE_REGISTER, G_XOR, G_ZEXT, G_ZEXTLOAD, ICALL_BRANCH_FUNNEL,
       IMPLICIT_DEF, IN, INC, INCAbs, INCAbsIdx, INCImag8, INLINEASM,
       INLINEASM_BR, INSERT_SUBREG, IncMB, IncPtr, JMP, JMPIndir, JSR,
       KILL, LDAAbsIdx, LDAbs, LDAbsIdx, LDCImm, LDImag8, LDImm, LDImm1,
       LDImm16, LDImm16Remat, LDIndirIdx, LDStk, LDXAbsIdx, LDYAbsIdx,
       LDZ, LIFETIME_END, LIFETIME_START, LOAD_STACK_GUARD, LOCAL_ESCAPE,
       LSR, LSRAbs, LSRAbsIdx, MEMBARRIER, ORAAbs, ORAAbsIdx, ORAImag8,
       ORAImm, ORAIndirIdx, PATCHABLE_EVENT_CALL,
       PATCHABLE_FUNCTION_ENTER, PATCHABLE_FUNCTION_EXIT, PATCHABLE_OP,
       PATCHABLE_RET, PATCHABLE_TAIL_CALL, PATCHABLE_TYPED_EVENT_CALL,
       PATCHPOINT, PH, PHI, PL, PREALLOCATED_ARG, PREALLOCATED_SETUP,
       PSEUDO_PROBE, REG_SEQUENCE, ROL, ROLAbs, ROLAbsIdx, ROR, RORAbs,
       RORAbsIdx, RTI, RTS, SBCAbs, SBCAbsIdx, SBCImag8, SBCImm,
       SBCIndirIdx, STACKMAP, STATEPOINT, STAbs, STAbsIdx, STImag8,
       STIndirIdx, STStk, STZAbs, STZAbsIdx, STZImag8, SUBREG_TO_REG,
       SelectImm, TA, T_A, TailJMP]
    = 0
  | i `elem`
      [ASL_Accumulator, ASR_Implied, BRK_Implied, CLC_Implied,
       CLD_Implied, CLE_Implied, CLI_Implied, CLV_Implied,
       DEC_Accumulator, DEX_Implied, DEY_Implied, DEZ_Implied,
       INC_Accumulator, INX_Implied, INY_Implied, INZ_Implied,
       LSR_Accumulator, NEG_Implied, NOP_Implied, PHA_Implied,
       PHP_Implied, PHX_Implied, PHY_Implied, PHZ_Implied, PLA_Implied,
       PLP_Implied, PLX_Implied, PLY_Implied, PLZ_Implied,
       ROL_Accumulator, ROR_Accumulator, RTI_Implied, RTL_Implied,
       RTS_Implied, SEC_Implied, SED_Implied, SEE_Implied, SEI_Implied,
       TAB_Implied, TAX_Implied, TAY_Implied, TAZ_Implied, TBA_Implied,
       TSX_Implied, TSY_Implied, TXA_Implied, TXS_Implied, TYA_Implied,
       TYS_Implied, TZA_Implied]
    = 1
  | i `elem`
      [ADC_Immediate, ADC_IndexedIndirect, ADC_Indirect,
       ADC_IndirectIndexed, ADC_IndirectIndexedLong, ADC_IndirectLong,
       ADC_IndirectZeroPageZ, ADC_ZeroPage, ADC_ZeroPageX, AND_Immediate,
       AND_IndexedIndirect, AND_Indirect, AND_IndirectIndexed,
       AND_IndirectIndexedLong, AND_IndirectLong, AND_IndirectZeroPageZ,
       AND_ZeroPage, AND_ZeroPageX, ASL_ZeroPage, ASL_ZeroPageX,
       ASR_ZeroPage, ASR_ZeroPageX, BCC_Relative, BCS_Relative,
       BEQ_Relative, BIT_Immediate, BIT_ZeroPage, BIT_ZeroPageX,
       BMI_Relative, BNE_Relative, BPL_Relative, BRA_Relative,
       BVC_Relative, BVS_Relative, CMP_Immediate, CMP_IndexedIndirect,
       CMP_Indirect, CMP_IndirectIndexed, CMP_IndirectIndexedLong,
       CMP_IndirectLong, CMP_IndirectZeroPageZ, CMP_ZeroPage,
       CMP_ZeroPageX, CPX_Immediate, CPX_ZeroPage, CPY_Immediate,
       CPY_ZeroPage, CPZ_Immediate, CPZ_ZeroPage, DEC_ZeroPage,
       DEC_ZeroPageX, DEW_ZeroPage, EOR_Immediate, EOR_IndexedIndirect,
       EOR_Indirect, EOR_IndirectIndexed, EOR_IndirectIndexedLong,
       EOR_IndirectLong, EOR_IndirectZeroPageZ, EOR_ZeroPage,
       EOR_ZeroPageX, INC_ZeroPage, INC_ZeroPageX, INW_ZeroPage,
       LDA_Immediate, LDA_IndexedIndirect, LDA_Indirect,
       LDA_IndirectIndexed, LDA_IndirectIndexedLong, LDA_IndirectLong,
       LDA_IndirectStackPointerY, LDA_IndirectZeroPageZ, LDA_ZeroPage,
       LDA_ZeroPageX, LDX_Immediate, LDX_ZeroPage, LDX_ZeroPageY,
       LDY_Immediate, LDY_ZeroPage, LDY_ZeroPageX, LDZ_Immediate,
       LSR_ZeroPage, LSR_ZeroPageX, ORA_Immediate, ORA_IndexedIndirect,
       ORA_Indirect, ORA_IndirectIndexed, ORA_IndirectIndexedLong,
       ORA_IndirectLong, ORA_IndirectZeroPageZ, ORA_ZeroPage,
       ORA_ZeroPageX, REP_Immediate, ROL_ZeroPage, ROL_ZeroPageX,
       ROR_ZeroPage, ROR_ZeroPageX, RTN_Immediate, SBC_Immediate,
       SBC_IndexedIndirect, SBC_Indirect, SBC_IndirectIndexed,
       SBC_IndirectIndexedLong, SBC_IndirectLong, SBC_IndirectZeroPageZ,
       SBC_ZeroPage, SBC_ZeroPageX, SEP_Immediate, STA_IndexedIndirect,
       STA_Indirect, STA_IndirectIndexed, STA_IndirectIndexedLong,
       STA_IndirectLong, STA_IndirectStackPointerY, STA_IndirectZeroPageZ,
       STA_ZeroPage, STA_ZeroPageX, STX_ZeroPage, STX_ZeroPageY,
       STY_ZeroPage, STY_ZeroPageX, STZ_ZeroPage, STZ_ZeroPageX,
       TRB_ZeroPage, TSB_ZeroPage]
    = 2
  | i `elem`
      [ADC_Absolute, ADC_AbsoluteX, ADC_AbsoluteY, ADC_Immediate16,
       AND_Absolute, AND_AbsoluteX, AND_AbsoluteY, AND_Immediate16,
       ASL_Absolute, ASL_AbsoluteX, ASW_Absolute, BCC_Relative16,
       BCS_Relative16, BEQ_Relative16, BIT_Absolute, BIT_AbsoluteX,
       BMI_Relative16, BNE_Relative16, BPL_Relative16, BRA_Relative16,
       BRL_Relative16, BSR_Relative16, BVC_Relative16, BVS_Relative16,
       CMP_Absolute, CMP_AbsoluteX, CMP_AbsoluteY, CMP_Immediate16,
       CPX_Absolute, CPX_Immediate16, CPY_Absolute, CPY_Immediate16,
       CPZ_Absolute, DEC_Absolute, DEC_AbsoluteX, EOR_Absolute,
       EOR_AbsoluteX, EOR_AbsoluteY, EOR_Immediate16, INC_Absolute,
       INC_AbsoluteX, JML_Indirect16, JMP_Absolute, JMP_IndexedIndirect,
       JMP_Indirect16, JSR_Absolute, JSR_AbsoluteIndirect,
       JSR_AbsoluteIndirectX, JSR_IndexedIndirect16, LDA_Absolute,
       LDA_AbsoluteX, LDA_AbsoluteY, LDA_Immediate16, LDX_Absolute,
       LDX_AbsoluteY, LDX_Immediate16, LDY_Absolute, LDY_AbsoluteX,
       LDY_Immediate16, LDZ_Absolute, LDZ_AbsoluteX, LSR_Absolute,
       LSR_AbsoluteX, ORA_Absolute, ORA_AbsoluteX, ORA_AbsoluteY,
       ORA_Immediate16, PHW_Absolute, PHW_Immediate, ROL_Absolute,
       ROL_AbsoluteX, ROR_Absolute, ROR_AbsoluteX, ROW_Absolute,
       SBC_Absolute, SBC_AbsoluteX, SBC_AbsoluteY, SBC_Immediate16,
       STA_Absolute, STA_AbsoluteX, STA_AbsoluteY, STX_Absolute,
       STX_AbsoluteY, STY_Absolute, STY_AbsoluteX, STZ_Absolute,
       STZ_AbsoluteX, TRB_Absolute, TSB_Absolute]
    = 3
  | i `elem`
      [ADC_AbsoluteLong, ADC_AbsoluteXLong, AND_AbsoluteLong,
       AND_AbsoluteXLong, CMP_AbsoluteLong, CMP_AbsoluteXLong,
       EOR_AbsoluteLong, EOR_AbsoluteXLong, JMP_AbsoluteLong,
       JSL_AbsoluteLong, LDA_AbsoluteLong, LDA_AbsoluteXLong,
       ORA_AbsoluteLong, ORA_AbsoluteXLong, SBC_AbsoluteLong,
       SBC_AbsoluteXLong, STA_AbsoluteLong, STA_AbsoluteXLong]
    = 4

