-- This file has been generated by specsgen. Do not modify by hand!

module Unison.Target.MOS.SpecsGen.OperandInfo (operandInfo) where
import Unison
import Unison.Target.MOS.SpecsGen.MOSInstructionDecl
import Unison.Target.MOS.SpecsGen.MOSRegisterClassDecl
operandInfo i
  | i `elem`
      [ASL_Accumulator, ASR_Implied, BRK_Implied, CLC_Implied,
       CLD_Implied, CLE_Implied, CLI_Implied, CLV_Implied,
       DEC_Accumulator, DEX_Implied, DEY_Implied, DEZ_Implied,
       FENTRY_CALL, G_INVOKE_REGION_START, INC_Accumulator, INX_Implied,
       INY_Implied, INZ_Implied, LSR_Accumulator, MEMBARRIER, NEG_Implied,
       NOP_Implied, PATCHABLE_FUNCTION_ENTER, PATCHABLE_FUNCTION_EXIT,
       PHA_Implied, PHP_Implied, PHX_Implied, PHY_Implied, PHZ_Implied,
       PLA_Implied, PLP_Implied, PLX_Implied, PLY_Implied, PLZ_Implied,
       ROL_Accumulator, ROR_Accumulator, RTI, RTI_Implied, RTL_Implied,
       RTS, RTS_Implied, SEC_Implied, SED_Implied, SEE_Implied,
       SEI_Implied, TAB_Implied, TAX_Implied, TAY_Implied, TAZ_Implied,
       TBA_Implied, TSX_Implied, TSY_Implied, TXA_Implied, TXS_Implied,
       TYA_Implied, TYS_Implied, TZA_Implied]
    = ([], [])
  | i `elem` [PL] =
    ([], [TemporaryInfo (RegisterClass AXYP) 1 False])
  | i `elem` [LDZ] =
    ([], [TemporaryInfo (RegisterClass Anyi8) 1 False])
  | i `elem` [STZImag8] =
    ([], [TemporaryInfo (RegisterClass Imag8) 1 False])
  | i `elem` [CLV] = ([], [TemporaryInfo (RegisterClass Vc) 1 False])
  | i `elem` [LOAD_STACK_GUARD] =
    ([], [TemporaryInfo (RegisterClass Ptr_rc) 1 False])
  | i `elem` [G_IMPLICIT_DEF, G_READCYCLECOUNTER, IMPLICIT_DEF] =
    ([], [BoundInfo])
  | i `elem` [ASL, LSR] =
    ([TemporaryInfo (RegisterClass AImag8) 0 False],
     [TemporaryInfo (RegisterClass AImag8) 1 False,
      TemporaryInfo (RegisterClass Cc) 1 False])
  | i `elem` [ROL, ROR] =
    ([TemporaryInfo (RegisterClass AImag8) 0 False,
      TemporaryInfo (RegisterClass Cc) 0 False],
     [TemporaryInfo (RegisterClass AImag8) 1 False,
      TemporaryInfo (RegisterClass Cc) 1 False])
  | i `elem` [PH] =
    ([TemporaryInfo (RegisterClass AXYP) 0 False], [])
  | i `elem` [TA] =
    ([TemporaryInfo (RegisterClass Ac) 0 False],
     [TemporaryInfo (RegisterClass XY) 1 False])
  | i `elem` [STIndirIdx] =
    ([TemporaryInfo (RegisterClass Ac) 0 False,
      TemporaryInfo (RegisterClass Imag16) 0 False,
      TemporaryInfo (RegisterClass Yc) 0 False],
     [])
  | i `elem` [ANDIndirIdx, EORIndirIdx, ORAIndirIdx] =
    ([TemporaryInfo (RegisterClass Ac) 0 False,
      TemporaryInfo (RegisterClass Imag16) 0 False,
      TemporaryInfo (RegisterClass Yc) 0 False],
     [TemporaryInfo (RegisterClass Ac) 1 False])
  | i `elem` [CMPIndirIdx, CMPTermIndir] =
    ([TemporaryInfo (RegisterClass Ac) 0 False,
      TemporaryInfo (RegisterClass Imag16) 0 False,
      TemporaryInfo (RegisterClass Yc) 0 False],
     [TemporaryInfo (RegisterClass Cc) 1 False])
  | i `elem` [ADCIndirIdx, SBCIndirIdx] =
    ([TemporaryInfo (RegisterClass Ac) 0 False,
      TemporaryInfo (RegisterClass Imag16) 0 False,
      TemporaryInfo (RegisterClass Yc) 0 False,
      TemporaryInfo (RegisterClass Cc) 0 False],
     [TemporaryInfo (RegisterClass Ac) 1 False,
      TemporaryInfo (RegisterClass Cc) 1 False,
      TemporaryInfo (RegisterClass Vc) 1 False])
  | i `elem` [ANDImag8, EORImag8, ORAImag8] =
    ([TemporaryInfo (RegisterClass Ac) 0 False,
      TemporaryInfo (RegisterClass Imag8) 0 False],
     [TemporaryInfo (RegisterClass Ac) 1 False])
  | i `elem` [ADCImag8, SBCImag8] =
    ([TemporaryInfo (RegisterClass Ac) 0 False,
      TemporaryInfo (RegisterClass Imag8) 0 False,
      TemporaryInfo (RegisterClass Cc) 0 False],
     [TemporaryInfo (RegisterClass Ac) 1 False,
      TemporaryInfo (RegisterClass Cc) 1 False,
      TemporaryInfo (RegisterClass Vc) 1 False])
  | i `elem` [ANDAbs, ANDImm, EORAbs, EORImm, ORAAbs, ORAImm] =
    ([TemporaryInfo (RegisterClass Ac) 0 False, BoundInfo],
     [TemporaryInfo (RegisterClass Ac) 1 False])
  | i `elem` [BITAbs] =
    ([TemporaryInfo (RegisterClass Ac) 0 False, BoundInfo],
     [TemporaryInfo (RegisterClass Vc) 1 False])
  | i `elem` [ADCAbs, ADCImm, SBCAbs, SBCImm] =
    ([TemporaryInfo (RegisterClass Ac) 0 False, BoundInfo,
      TemporaryInfo (RegisterClass Cc) 0 False],
     [TemporaryInfo (RegisterClass Ac) 1 False,
      TemporaryInfo (RegisterClass Cc) 1 False,
      TemporaryInfo (RegisterClass Vc) 1 False])
  | i `elem` [STAbsIdx] =
    ([TemporaryInfo (RegisterClass Ac) 0 False, BoundInfo,
      TemporaryInfo (RegisterClass XY) 0 False],
     [])
  | i `elem` [ANDAbsIdx, EORAbsIdx, ORAAbsIdx] =
    ([TemporaryInfo (RegisterClass Ac) 0 False, BoundInfo,
      TemporaryInfo (RegisterClass XY) 0 False],
     [TemporaryInfo (RegisterClass Ac) 1 False])
  | i `elem` [CMPAbsIdx, CMPTermIdx] =
    ([TemporaryInfo (RegisterClass Ac) 0 False, BoundInfo,
      TemporaryInfo (RegisterClass XY) 0 False],
     [TemporaryInfo (RegisterClass Cc) 1 False])
  | i `elem` [ADCAbsIdx, SBCAbsIdx] =
    ([TemporaryInfo (RegisterClass Ac) 0 False, BoundInfo,
      TemporaryInfo (RegisterClass XY) 0 False,
      TemporaryInfo (RegisterClass Cc) 0 False],
     [TemporaryInfo (RegisterClass Ac) 1 False,
      TemporaryInfo (RegisterClass Cc) 1 False,
      TemporaryInfo (RegisterClass Vc) 1 False])
  | i `elem` [DEC, INC] =
    ([TemporaryInfo (RegisterClass Anyi8) 0 False],
     [TemporaryInfo (RegisterClass Anyi8) 1 False])
  | i `elem` [CMPTermZ] =
    ([TemporaryInfo (RegisterClass Anyi8) 0 False],
     [TemporaryInfo (RegisterClass Cc) 1 False])
  | i `elem` [SelectImm] =
    ([TemporaryInfo (RegisterClass Flag) 0 False, BoundInfo,
      BoundInfo],
     [BoundInfo])
  | i `elem` [STImag8] =
    ([TemporaryInfo (RegisterClass GPR) 0 False],
     [TemporaryInfo (RegisterClass Imag8) 1 False])
  | i `elem` [CMPImag8, CMPTermImag8] =
    ([TemporaryInfo (RegisterClass GPR) 0 False,
      TemporaryInfo (RegisterClass Imag8) 0 False],
     [TemporaryInfo (RegisterClass Cc) 1 False])
  | i `elem` [STAbs] =
    ([TemporaryInfo (RegisterClass GPR) 0 False, BoundInfo], [])
  | i `elem` [CMPAbs, CMPImm, CMPTermAbs, CMPTermImm] =
    ([TemporaryInfo (RegisterClass GPR) 0 False, BoundInfo],
     [TemporaryInfo (RegisterClass Cc) 1 False])
  | i `elem` [JMPIndir] =
    ([TemporaryInfo (RegisterClass Imag16) 0 False], [])
  | i `elem` [DecPtr] =
    ([TemporaryInfo (RegisterClass Imag16) 0 False],
     [TemporaryInfo (RegisterClass GPR) 1 False,
      TemporaryInfo (RegisterClass Imag16) 1 False])
  | i `elem` [IncPtr] =
    ([TemporaryInfo (RegisterClass Imag16) 0 False],
     [TemporaryInfo (RegisterClass Imag16) 1 False])
  | i `elem` [LDIndirIdx] =
    ([TemporaryInfo (RegisterClass Imag16) 0 False,
      TemporaryInfo (RegisterClass Yc) 0 False],
     [TemporaryInfo (RegisterClass Ac) 1 False])
  | i `elem` [AddrLostk] =
    ([TemporaryInfo (RegisterClass Imag16) 0 False, BoundInfo],
     [TemporaryInfo (RegisterClass Anyi8) 1 False,
      TemporaryInfo (RegisterClass Cc) 1 False,
      TemporaryInfo (RegisterClass Vc) 1 False])
  | i `elem` [LDStk] =
    ([TemporaryInfo (RegisterClass Imag16) 0 False, BoundInfo],
     [BoundInfo, TemporaryInfo (RegisterClass Imag16) 1 False])
  | i `elem` [AddrHistk] =
    ([TemporaryInfo (RegisterClass Imag16) 0 False, BoundInfo,
      TemporaryInfo (RegisterClass Cc) 0 False],
     [TemporaryInfo (RegisterClass Anyi8) 1 False,
      TemporaryInfo (RegisterClass Cc) 1 False,
      TemporaryInfo (RegisterClass Vc) 1 False])
  | i `elem` [LDImag8] =
    ([TemporaryInfo (RegisterClass Imag8) 0 False],
     [TemporaryInfo (RegisterClass GPR) 1 False])
  | i `elem` [DECImag8, INCImag8] =
    ([TemporaryInfo (RegisterClass Imag8) 0 False],
     [TemporaryInfo (RegisterClass Imag8) 1 False])
  | i `elem` [T_A] =
    ([TemporaryInfo (RegisterClass XY) 0 False],
     [TemporaryInfo (RegisterClass Ac) 1 False])
  | i `elem` [DE, IN] =
    ([TemporaryInfo (RegisterClass XY) 0 False],
     [TemporaryInfo (RegisterClass XY) 1 False])
  | i `elem` [LOCAL_ESCAPE, PATCHABLE_EVENT_CALL] =
    ([TemporaryInfo (RegisterClass Ptr_rc) 0 False, BoundInfo], [])
  | i `elem`
      [ADC_Absolute, ADC_AbsoluteLong, ADC_AbsoluteX, ADC_AbsoluteXLong,
       ADC_AbsoluteY, ADC_Immediate, ADC_Immediate16, ADC_IndexedIndirect,
       ADC_Indirect, ADC_IndirectIndexed, ADC_IndirectIndexedLong,
       ADC_IndirectLong, ADC_IndirectZeroPageZ, ADC_ZeroPage,
       ADC_ZeroPageX, AND_Absolute, AND_AbsoluteLong, AND_AbsoluteX,
       AND_AbsoluteXLong, AND_AbsoluteY, AND_Immediate, AND_Immediate16,
       AND_IndexedIndirect, AND_Indirect, AND_IndirectIndexed,
       AND_IndirectIndexedLong, AND_IndirectLong, AND_IndirectZeroPageZ,
       AND_ZeroPage, AND_ZeroPageX, ANNOTATION_LABEL, ASL_Absolute,
       ASL_AbsoluteX, ASL_ZeroPage, ASL_ZeroPageX, ASR_ZeroPage,
       ASR_ZeroPageX, ASW_Absolute, BCC_Relative, BCC_Relative16,
       BCS_Relative, BCS_Relative16, BEQ_Relative, BEQ_Relative16,
       BIT_Absolute, BIT_AbsoluteX, BIT_Immediate, BIT_ZeroPage,
       BIT_ZeroPageX, BMI_Relative, BMI_Relative16, BNE_Relative,
       BNE_Relative16, BPL_Relative, BPL_Relative16, BRA_Relative,
       BRA_Relative16, BRL_Relative16, BSR_Relative16, BUNDLE,
       BVC_Relative, BVC_Relative16, BVS_Relative, BVS_Relative16,
       CFI_INSTRUCTION, CMP_Absolute, CMP_AbsoluteLong, CMP_AbsoluteX,
       CMP_AbsoluteXLong, CMP_AbsoluteY, CMP_Immediate, CMP_Immediate16,
       CMP_IndexedIndirect, CMP_Indirect, CMP_IndirectIndexed,
       CMP_IndirectIndexedLong, CMP_IndirectLong, CMP_IndirectZeroPageZ,
       CMP_ZeroPage, CMP_ZeroPageX, CPX_Absolute, CPX_Immediate,
       CPX_Immediate16, CPX_ZeroPage, CPY_Absolute, CPY_Immediate,
       CPY_Immediate16, CPY_ZeroPage, CPZ_Absolute, CPZ_Immediate,
       CPZ_ZeroPage, DBG_INSTR_REF, DBG_LABEL, DBG_PHI, DBG_VALUE,
       DBG_VALUE_LIST, DECAbs, DEC_Absolute, DEC_AbsoluteX, DEC_ZeroPage,
       DEC_ZeroPageX, DEW_ZeroPage, EH_LABEL, EOR_Absolute,
       EOR_AbsoluteLong, EOR_AbsoluteX, EOR_AbsoluteXLong, EOR_AbsoluteY,
       EOR_Immediate, EOR_Immediate16, EOR_IndexedIndirect, EOR_Indirect,
       EOR_IndirectIndexed, EOR_IndirectIndexedLong, EOR_IndirectLong,
       EOR_IndirectZeroPageZ, EOR_ZeroPage, EOR_ZeroPageX, GC_LABEL, G_BR,
       G_BRINDIRECT, G_VASTART, ICALL_BRANCH_FUNNEL, INCAbs, INC_Absolute,
       INC_AbsoluteX, INC_ZeroPage, INC_ZeroPageX, INLINEASM,
       INLINEASM_BR, INW_ZeroPage, JML_Indirect16, JMP_Absolute,
       JMP_AbsoluteLong, JMP_IndexedIndirect, JMP_Indirect16,
       JSL_AbsoluteLong, JSR_Absolute, JSR_AbsoluteIndirect,
       JSR_AbsoluteIndirectX, JSR_IndexedIndirect16, KILL, LDA_Absolute,
       LDA_AbsoluteLong, LDA_AbsoluteX, LDA_AbsoluteXLong, LDA_AbsoluteY,
       LDA_Immediate, LDA_Immediate16, LDA_IndexedIndirect, LDA_Indirect,
       LDA_IndirectIndexed, LDA_IndirectIndexedLong, LDA_IndirectLong,
       LDA_IndirectStackPointerY, LDA_IndirectZeroPageZ, LDA_ZeroPage,
       LDA_ZeroPageX, LDX_Absolute, LDX_AbsoluteY, LDX_Immediate,
       LDX_Immediate16, LDX_ZeroPage, LDX_ZeroPageY, LDY_Absolute,
       LDY_AbsoluteX, LDY_Immediate, LDY_Immediate16, LDY_ZeroPage,
       LDY_ZeroPageX, LDZ_Absolute, LDZ_AbsoluteX, LDZ_Immediate,
       LIFETIME_END, LIFETIME_START, LSR_Absolute, LSR_AbsoluteX,
       LSR_ZeroPage, LSR_ZeroPageX, ORA_Absolute, ORA_AbsoluteLong,
       ORA_AbsoluteX, ORA_AbsoluteXLong, ORA_AbsoluteY, ORA_Immediate,
       ORA_Immediate16, ORA_IndexedIndirect, ORA_Indirect,
       ORA_IndirectIndexed, ORA_IndirectIndexedLong, ORA_IndirectLong,
       ORA_IndirectZeroPageZ, ORA_ZeroPage, ORA_ZeroPageX, PATCHABLE_OP,
       PATCHABLE_RET, PATCHABLE_TAIL_CALL, PHW_Absolute, PHW_Immediate,
       PREALLOCATED_SETUP, REP_Immediate, ROL_Absolute, ROL_AbsoluteX,
       ROL_ZeroPage, ROL_ZeroPageX, ROR_Absolute, ROR_AbsoluteX,
       ROR_ZeroPage, ROR_ZeroPageX, ROW_Absolute, RTN_Immediate,
       SBC_Absolute, SBC_AbsoluteLong, SBC_AbsoluteX, SBC_AbsoluteXLong,
       SBC_AbsoluteY, SBC_Immediate, SBC_Immediate16, SBC_IndexedIndirect,
       SBC_Indirect, SBC_IndirectIndexed, SBC_IndirectIndexedLong,
       SBC_IndirectLong, SBC_IndirectZeroPageZ, SBC_ZeroPage,
       SBC_ZeroPageX, SEP_Immediate, STA_Absolute, STA_AbsoluteLong,
       STA_AbsoluteX, STA_AbsoluteXLong, STA_AbsoluteY,
       STA_IndexedIndirect, STA_Indirect, STA_IndirectIndexed,
       STA_IndirectIndexedLong, STA_IndirectLong,
       STA_IndirectStackPointerY, STA_IndirectZeroPageZ, STA_ZeroPage,
       STA_ZeroPageX, STX_Absolute, STX_AbsoluteY, STX_ZeroPage,
       STX_ZeroPageY, STY_Absolute, STY_AbsoluteX, STY_ZeroPage,
       STY_ZeroPageX, STZAbs, STZ_Absolute, STZ_AbsoluteX, STZ_ZeroPage,
       STZ_ZeroPageX, TRB_Absolute, TRB_ZeroPage, TSB_Absolute,
       TSB_ZeroPage]
    = ([BoundInfo], [])
  | i `elem` [LDImm1] =
    ([BoundInfo], [TemporaryInfo (RegisterClass CV_GPR_LSB) 1 False])
  | i `elem` [ASLAbs, CMPTermZMB, LDCImm, LSRAbs] =
    ([BoundInfo], [TemporaryInfo (RegisterClass Cc) 1 False])
  | i `elem` [LDAbs, LDImm] =
    ([BoundInfo], [TemporaryInfo (RegisterClass GPR) 1 False])
  | i `elem` [DecMB] =
    ([BoundInfo],
     [TemporaryInfo (RegisterClass GPR) 1 False, BoundInfo])
  | i `elem` [LDImm16Remat] =
    ([BoundInfo], [TemporaryInfo (RegisterClass Imag16) 1 False])
  | i `elem` [LDImm16] =
    ([BoundInfo],
     [TemporaryInfo (RegisterClass Imag16) 1 False,
      TemporaryInfo (RegisterClass GPR) 1 False])
  | i `elem`
      [ARITH_FENCE, COPY, FAULTING_OP, G_ABS, G_ADDRSPACE_CAST, G_ANYEXT,
       G_BITCAST, G_BITREVERSE, G_BLOCK_ADDR, G_BSWAP, G_CMPZ, G_CONSTANT,
       G_CONSTANT_POOL, G_CTLZ, G_CTLZ_ZERO_UNDEF, G_CTPOP, G_CTTZ,
       G_CTTZ_ZERO_UNDEF, G_DEC, G_DEC_TMP, G_FABS, G_FCANONICALIZE,
       G_FCEIL, G_FCONSTANT, G_FCOS, G_FEXP, G_FEXP2, G_FFLOOR, G_FLOG,
       G_FLOG10, G_FLOG2, G_FNEARBYINT, G_FNEG, G_FPEXT, G_FPTOSI,
       G_FPTOUI, G_FPTRUNC, G_FRAME_INDEX, G_FREEZE, G_FRINT, G_FSIN,
       G_FSQRT, G_GLOBAL_VALUE, G_INC, G_INC_TMP, G_INTRINSIC_LRINT,
       G_INTRINSIC_ROUND, G_INTRINSIC_ROUNDEVEN, G_INTRINSIC_TRUNC,
       G_INTTOPTR, G_JUMP_TABLE, G_LLROUND, G_LOAD, G_LOAD_ABS, G_LROUND,
       G_PHI, G_PTRTOINT, G_READ_REGISTER, G_SEXT, G_SEXTLOAD, G_SITOFP,
       G_STRICT_FSQRT, G_TRUNC, G_UITOFP, G_VECREDUCE_ADD,
       G_VECREDUCE_AND, G_VECREDUCE_FADD, G_VECREDUCE_FMAX,
       G_VECREDUCE_FMIN, G_VECREDUCE_FMUL, G_VECREDUCE_MUL,
       G_VECREDUCE_OR, G_VECREDUCE_SMAX, G_VECREDUCE_SMIN,
       G_VECREDUCE_UMAX, G_VECREDUCE_UMIN, G_VECREDUCE_XOR, G_ZEXT,
       G_ZEXTLOAD, IncMB, PHI, STATEPOINT]
    = ([BoundInfo], [BoundInfo])
  | i `elem` [G_UNMERGE_VALUES] =
    ([BoundInfo], [BoundInfo, BoundInfo])
  | i `elem` [ROLAbs, RORAbs] =
    ([BoundInfo, TemporaryInfo (RegisterClass Cc) 0 False],
     [TemporaryInfo (RegisterClass Cc) 1 False])
  | i `elem` [STStk] =
    ([BoundInfo, TemporaryInfo (RegisterClass Imag16) 0 False,
      BoundInfo],
     [TemporaryInfo (RegisterClass Imag16) 1 False])
  | i `elem` [LDAAbsIdx] =
    ([BoundInfo, TemporaryInfo (RegisterClass XY) 0 False],
     [TemporaryInfo (RegisterClass Ac) 1 False])
  | i `elem` [LDAbsIdx] =
    ([BoundInfo, TemporaryInfo (RegisterClass XY) 0 False],
     [TemporaryInfo (RegisterClass GPR) 1 False])
  | i `elem` [DECAbsIdx, INCAbsIdx, STZAbsIdx] =
    ([BoundInfo, TemporaryInfo (RegisterClass Xc) 0 False], [])
  | i `elem` [ASLAbsIdx, LSRAbsIdx] =
    ([BoundInfo, TemporaryInfo (RegisterClass Xc) 0 False],
     [TemporaryInfo (RegisterClass Cc) 1 False])
  | i `elem` [LDYAbsIdx] =
    ([BoundInfo, TemporaryInfo (RegisterClass Xc) 0 False],
     [TemporaryInfo (RegisterClass Yc) 1 False])
  | i `elem` [ROLAbsIdx, RORAbsIdx] =
    ([BoundInfo, TemporaryInfo (RegisterClass Xc) 0 False,
      TemporaryInfo (RegisterClass Cc) 0 False],
     [TemporaryInfo (RegisterClass Cc) 1 False])
  | i `elem` [LDXAbsIdx] =
    ([BoundInfo, TemporaryInfo (RegisterClass Yc) 0 False],
     [TemporaryInfo (RegisterClass Xc) 1 False])
  | i `elem` [PATCHABLE_TYPED_EVENT_CALL] =
    ([BoundInfo, TemporaryInfo (RegisterClass Ptr_rc) 0 False,
      BoundInfo],
     [])
  | i `elem`
      [ADJCALLSTACKDOWN, ADJCALLSTACKUP, G_BRCOND, G_FENCE, G_INTRINSIC,
       G_INTRINSIC_W_SIDE_EFFECTS, G_STORE, G_STORE_ABS, G_WRITE_REGISTER]
    = ([BoundInfo, BoundInfo], [])
  | i `elem` [PREALLOCATED_ARG] =
    ([BoundInfo, BoundInfo],
     [TemporaryInfo (RegisterClass Ptr_rc) 1 False])
  | i `elem`
      [COPY_TO_REGCLASS, EXTRACT_SUBREG, G_ADD, G_AND, G_ASHR,
       G_ASSERT_ALIGN, G_ASSERT_SEXT, G_ASSERT_ZEXT, G_ATOMICRMW_ADD,
       G_ATOMICRMW_AND, G_ATOMICRMW_FADD, G_ATOMICRMW_FMAX,
       G_ATOMICRMW_FMIN, G_ATOMICRMW_FSUB, G_ATOMICRMW_MAX,
       G_ATOMICRMW_MIN, G_ATOMICRMW_NAND, G_ATOMICRMW_OR, G_ATOMICRMW_SUB,
       G_ATOMICRMW_UDEC_WRAP, G_ATOMICRMW_UINC_WRAP, G_ATOMICRMW_UMAX,
       G_ATOMICRMW_UMIN, G_ATOMICRMW_XCHG, G_ATOMICRMW_XOR,
       G_BUILD_VECTOR, G_BUILD_VECTOR_TRUNC, G_CONCAT_VECTORS,
       G_DYN_STACKALLOC, G_EXTRACT, G_EXTRACT_VECTOR_ELT, G_FADD,
       G_FCOPYSIGN, G_FDIV, G_FMAXIMUM, G_FMAXNUM, G_FMAXNUM_IEEE,
       G_FMINIMUM, G_FMINNUM, G_FMINNUM_IEEE, G_FMUL, G_FPOW, G_FPOWI,
       G_FREM, G_FSUB, G_INTRINSIC_FPTRUNC_ROUND, G_IS_FPCLASS,
       G_LOAD_ABS_IDX, G_LOAD_INDIR_IDX, G_LSHR, G_MERGE_VALUES, G_MUL,
       G_OR, G_PTRMASK, G_PTR_ADD, G_ROTL, G_ROTR, G_SADDSAT, G_SDIV,
       G_SEXT_INREG, G_SHL, G_SMAX, G_SMIN, G_SMULH, G_SREM, G_SSHLSAT,
       G_SSUBSAT, G_STRICT_FADD, G_STRICT_FDIV, G_STRICT_FMUL,
       G_STRICT_FREM, G_STRICT_FSUB, G_SUB, G_UADDSAT, G_UDIV, G_UMAX,
       G_UMIN, G_UMULH, G_UREM, G_USHLSAT, G_USUBSAT, G_VAARG,
       G_VECREDUCE_SEQ_FADD, G_VECREDUCE_SEQ_FMUL, G_XOR, REG_SEQUENCE]
    = ([BoundInfo, BoundInfo], [BoundInfo])
  | i `elem`
      [G_LSHRE, G_SADDO, G_SDIVREM, G_SHLE, G_SMULO, G_SSUBO, G_UADDO,
       G_UDIVREM, G_UMULO, G_USUBO]
    = ([BoundInfo, BoundInfo], [BoundInfo, BoundInfo])
  | i `elem`
      [G_BRCOND_IMM, G_BRJT, G_BZERO, G_MEMCPY_INLINE, G_STORE_ABS_IDX,
       G_STORE_INDIR_IDX, STACKMAP]
    = ([BoundInfo, BoundInfo, BoundInfo], [])
  | i `elem`
      [G_ATOMIC_CMPXCHG, G_FCMP, G_FMA, G_FMAD, G_FSHL, G_FSHR, G_ICMP,
       G_INSERT, G_INSERT_VECTOR_ELT, G_SBFX, G_SDIVFIX, G_SDIVFIXSAT,
       G_SELECT, G_SHUFFLE_VECTOR, G_SMULFIX, G_SMULFIXSAT, G_STRICT_FMA,
       G_UBFX, G_UDIVFIX, G_UDIVFIXSAT, G_UMULFIX, G_UMULFIXSAT,
       INSERT_SUBREG, SUBREG_TO_REG]
    = ([BoundInfo, BoundInfo, BoundInfo], [BoundInfo])
  | i `elem`
      [G_ATOMIC_CMPXCHG_WITH_SUCCESS, G_INDEXED_LOAD, G_INDEXED_SEXTLOAD,
       G_INDEXED_ZEXTLOAD, G_SADDE, G_SSUBE, G_UADDE, G_USUBE]
    = ([BoundInfo, BoundInfo, BoundInfo], [BoundInfo, BoundInfo])
  | i `elem` [G_SBC] =
    ([BoundInfo, BoundInfo, BoundInfo],
     [BoundInfo, BoundInfo, BoundInfo, BoundInfo, BoundInfo])
  | i `elem` [G_MEMCPY, G_MEMMOVE, G_MEMSET, PSEUDO_PROBE] =
    ([BoundInfo, BoundInfo, BoundInfo, BoundInfo], [])
  | i `elem` [G_INDEXED_STORE] =
    ([BoundInfo, BoundInfo, BoundInfo, BoundInfo], [BoundInfo])
  | i `elem` [PATCHPOINT] =
    ([BoundInfo, BoundInfo, BoundInfo, BoundInfo, BoundInfo,
      BoundInfo],
     [BoundInfo])
  | i `elem` [BRA, JMP, JSR, TailJMP] = ([BlockRefInfo], [])
  | i `elem` [GBR] =
    ([BlockRefInfo, TemporaryInfo (RegisterClass Anyi1) 0 False,
      BoundInfo],
     [])
  | i `elem` [BR] =
    ([BlockRefInfo, TemporaryInfo (RegisterClass Flag) 0 False,
      BoundInfo],
     [])

